
services:
  db:
    image: 'library/postgres:14.2-alpine'
    container_name: test_user-postgres-14.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
#    command:
#      "postgres -c 'max_connections=500'"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
    - "5433:5432"
  user_web:
    build: ./
    command: [ "./wait-for-it.sh", "db:5432", "--", "bundle", "exec", "rails", "server", "-b", "0.0.0.0" ]  # Use wait-for-it to wait for DB
    environment:
      - DB_HOST=db  # Use 'db' as the host for the database in Docker
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    ports:
      - '3000:3000'
    volumes:
      - app-storage:/docker/app # add our local code to dockerfile
    depends_on:
      - db
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount custom Nginx config file
    ports:
      - "81:80"  # Expose Nginx on port 80 for external access
    depends_on:
      - user_web

volumes:
  postgres_data: {}
  app-storage: {}
networks:
  test_user_default: